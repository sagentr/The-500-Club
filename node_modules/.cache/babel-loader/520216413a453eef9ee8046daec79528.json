{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sagen\\\\OneDrive\\\\Desktop\\\\React-Learning\\\\pre-apprenticeship assmt\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\nimport { useState } from \"react\";\nimport getPoints from './RewardPoints';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredMonth, setFilteredMonth] = useState(\"6\");\n\n  const filterChangeHandler = selectedMonth => {\n    setFilteredMonth(selectedMonth);\n  };\n\n  const filteredExpenses = props.mockData.filter(expense => {\n    return expense.date.getMonth().toString() === filteredMonth;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredMonth,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        date: expense.date,\n        amount: expense.amount,\n        points: getPoints(expense.amount)\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"g2Uj2Ngj9PEST1ixQzM5pMm1Gdw=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/sagen/OneDrive/Desktop/React-Learning/pre-apprenticeship assmt/src/components/Expenses/Expenses.js"],"names":["ExpenseItem","Card","ExpensesFilter","useState","getPoints","Expenses","props","filteredMonth","setFilteredMonth","filterChangeHandler","selectedMonth","filteredExpenses","mockData","filter","expense","date","getMonth","toString","map","amount","id"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,gBAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAQC,SAAR,MAAuB,gBAAvB;;;AAIA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,GAAD,CAAlD;;AAEA,QAAMM,mBAAmB,GAAIC,aAAD,IAAmB;AAC7CF,IAAAA,gBAAgB,CAACE,aAAD,CAAhB;AACD,GAFD;;AAOA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBC,OAAO,IAAI;AACxD,WAAOA,OAAO,CAACC,IAAR,CAAaC,QAAb,GAAwBC,QAAxB,OAAuCV,aAA9C;AACD,GAFwB,CAAzB;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEA,aADZ;AAEE,QAAA,cAAc,EAAEE;AAFlB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGE,gBAAgB,CAACO,GAAjB,CAAsBJ,OAAD,iBACpB,QAAC,WAAD;AAEE,QAAA,IAAI,EAAEA,OAAO,CAACC,IAFhB;AAGE,QAAA,MAAM,EAAED,OAAO,CAACK,MAHlB;AAIE,QAAA,MAAM,EAAEf,SAAS,CAACU,OAAO,CAACK,MAAT;AAJnB,SACOL,OAAO,CAACM,EADf;AAAA;AAAA;AAAA;AAAA,cADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAjCQf,Q;;KAAAA,Q;AAmCT,eAAeA,QAAf","sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport \"./Expenses.css\";\r\nimport { useState } from \"react\";\r\nimport  getPoints from './RewardPoints';\r\n\r\n\r\n\r\nfunction Expenses(props) {\r\n  const [filteredMonth, setFilteredMonth] = useState(\"6\");\r\n\r\n  const filterChangeHandler = (selectedMonth) => {\r\n    setFilteredMonth(selectedMonth);\r\n  };\r\n\r\n\r\n\r\n\r\n  const filteredExpenses = props.mockData.filter(expense => {\r\n    return expense.date.getMonth().toString() === filteredMonth\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredMonth}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        {filteredExpenses.map((expense) => (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            date={expense.date}\r\n            amount={expense.amount}\r\n            points={getPoints(expense.amount)}\r\n          />\r\n        ))}\r\n\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}