{"ast":null,"code":"export const getPoints = purchaseAmount => {\n  Math.trunc(purchaseAmount);\n  let rewardPoints1 = 0;\n  let NewPurchaseAmount = 0;\n\n  if (Math.trunc(purchaseAmount) === 100) {\n    rewardPoints1 = 53;\n    console.log(rewardPoints1);\n  } else if (Math.trunc(purchaseAmount) >= 100) {\n    NewPurchaseAmount = purchaseAmount - 100;\n    rewardPoints1 = NewPurchaseAmount * 2 + 50;\n    console.log(rewardPoints1);\n  } else if (Math.trunc(purchaseAmount) >= 51 && Math.trunc(purchaseAmount) <= 100) {\n    NewPurchaseAmount = purchaseAmount - 50;\n    rewardPoints1 = NewPurchaseAmount;\n    console.log(rewardPoints1);\n  }\n\n  console.log(purchaseAmount);\n  return Math.floor(rewardPoints1);\n}; // ****************************************************************************************************************************************\n//T Do's\n//configure function so better suited for React, I have it coded in vanilla JS\n// Add in the the handling of decimals so as to only use whole numbers when calculating the RewardPoints\n//some sort of Math.trunc() situation??\n//Take amount from mockData as prop to run through the RewardPoints function\n//Push this data into where it wants to display this on the app (Expenses.js I think?)","map":{"version":3,"sources":["C:/Users/sagen/OneDrive/Desktop/React-Learning/pre-apprenticeship assmt/src/components/Expenses/RewardPoints.js"],"names":["getPoints","purchaseAmount","Math","trunc","rewardPoints1","NewPurchaseAmount","console","log","floor"],"mappings":"AACA,OAAO,MAAMA,SAAS,GAAIC,cAAD,IAAoB;AAE3CC,EAAAA,IAAI,CAACC,KAAL,CAAWF,cAAX,CAAF;AAEA,MAAIG,aAAa,GAAG,CAApB;AACA,MAAIC,iBAAiB,GAAG,CAAxB;;AAEU,MAAIH,IAAI,CAACC,KAAL,CAAWF,cAAX,CAAD,KAAiC,GAApC,EAAyC;AACtCG,IAAAA,aAAa,GAAG,EAAjB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACD,GAHD,MAIK,IAAIF,IAAI,CAACC,KAAL,CAAWF,cAAX,CAAD,IAAgC,GAAnC,EAAwC;AAC1CI,IAAAA,iBAAiB,GAAGJ,cAAc,GAAG,GAAtC;AACCG,IAAAA,aAAa,GAAIC,iBAAiB,GAAG,CAArB,GAA0B,EAA3C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACD,GAJI,MAIE,IAAKF,IAAI,CAACC,KAAL,CAAWF,cAAX,CAAD,IAAgC,EAAhC,IAAuCC,IAAI,CAACC,KAAL,CAAWF,cAAX,CAAD,IAAgC,GAA1E,EAA+E;AACjFI,IAAAA,iBAAiB,GAAGJ,cAAc,GAAG,EAAtC;AACCG,IAAAA,aAAa,GAAGC,iBAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACH;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ;AACA,SAAQC,IAAI,CAACM,KAAL,CAAWJ,aAAX,CAAR;AAET,CAvBM,C,CA4BP;AAEA;AACA;AACA;AACI;AACJ;AACA","sourcesContent":["\r\nexport const getPoints = (purchaseAmount) => {\r\n\r\n((Math.trunc(purchaseAmount)))\r\n\r\nlet rewardPoints1 = 0\r\nlet NewPurchaseAmount = 0;\r\n\r\n          if((Math.trunc(purchaseAmount)) === 100) {\r\n            (rewardPoints1 = 53);\r\n            console.log(rewardPoints1)\r\n          }\r\n          else if((Math.trunc(purchaseAmount)) >= 100) {\r\n            (NewPurchaseAmount = purchaseAmount - 100);\r\n            (rewardPoints1 = (NewPurchaseAmount * 2) + 50);\r\n            console.log(rewardPoints1)\r\n          } else if ((Math.trunc(purchaseAmount)) >= 51 && (Math.trunc(purchaseAmount)) <= 100) {\r\n              (NewPurchaseAmount = purchaseAmount - 50);\r\n              (rewardPoints1 = NewPurchaseAmount);\r\n              console.log(rewardPoints1)\r\n          } \r\n          console.log(purchaseAmount);\r\n          return (Math.floor(rewardPoints1));\r\n\r\n};\r\n\r\n\r\n\r\n\r\n// ****************************************************************************************************************************************\r\n\r\n//T Do's\r\n//configure function so better suited for React, I have it coded in vanilla JS\r\n// Add in the the handling of decimals so as to only use whole numbers when calculating the RewardPoints\r\n    //some sort of Math.trunc() situation??\r\n//Take amount from mockData as prop to run through the RewardPoints function\r\n//Push this data into where it wants to display this on the app (Expenses.js I think?)\r\n"]},"metadata":{},"sourceType":"module"}