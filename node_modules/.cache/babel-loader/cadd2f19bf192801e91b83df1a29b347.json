{"ast":null,"code":"import ExpenseItem from \"./ExpenseItem\";\nimport Expenses from \"./Expenses\";\n\nfunction getPoints(purchaseAmount) {\n  let rewardPoints1 = 0;\n  let NewPurchaseAmount = 0;\n\n  if (purchaseAmount === 100) {\n    rewardPoints1 = 53;\n  } else if (purchaseAmount >= 100) {\n    newpurchaseAmount = purchaseAmount - 100;\n    rewardPoints1 = newpurchaseAmount * 2 + 50;\n  } else if (purchaseAmount >= 51 && purchaseAmount <= 100) {\n    newPurchaseAmount = purchaseAmount - 50;\n    rewardPoints1 = newPurchaseAmount;\n  } else if (purchaseAmount <= 50) {\n    RewardPoints = 0;\n  }\n\n  return rewardPoints1;\n}\n\n;\nexport default RewardPoints; // ****************************************************************************************************************************************\n//T Do's\n//configure function so better suited for React, I have it coded in vanilla JS\n// Add in the the handling of decimals so as to only use whole numbers when calculating the RewardPoints\n//some sort of Math.trunc() situation??\n//Take amount from mockData as prop to run through the RewardPoints function\n//Push this data into where it wants to display this on the app (Expenses.js I think?)","map":{"version":3,"sources":["C:/Users/sagen/OneDrive/Desktop/React-Learning/pre-apprenticeship assmt/src/components/Expenses/RewardPoints.js"],"names":["ExpenseItem","Expenses","getPoints","purchaseAmount","rewardPoints1","NewPurchaseAmount","newpurchaseAmount","newPurchaseAmount","RewardPoints"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,SAAT,CAAmBC,cAAnB,EAAmC;AAEnC,MAAIC,aAAa,GAAG,CAApB;AACA,MAAIC,iBAAiB,GAAG,CAAxB;;AAEU,MAAGF,cAAc,KAAK,GAAtB,EAA2B;AACxBC,IAAAA,aAAa,GAAG,EAAjB;AACD,GAFD,MAGK,IAAGD,cAAc,IAAI,GAArB,EAA0B;AAC5BG,IAAAA,iBAAiB,GAAGH,cAAc,GAAG,GAAtC;AACCC,IAAAA,aAAa,GAAIE,iBAAiB,GAAG,CAArB,GAA0B,EAA3C;AACD,GAHI,MAGE,IAAIH,cAAc,IAAI,EAAlB,IAAwBA,cAAc,IAAI,GAA9C,EAAmD;AACrDI,IAAAA,iBAAiB,GAAGJ,cAAc,GAAG,EAAtC;AACCC,IAAAA,aAAa,GAAGG,iBAAjB;AACH,GAHM,MAGA,IAAIJ,cAAc,IAAI,EAAtB,EAA0B;AAC5BK,IAAAA,YAAY,GAAG,CAAhB;AACH;;AACD,SAAOJ,aAAP;AAET;;AAAA;AAED,eAAeI,YAAf,C,CAGA;AAEA;AACA;AACA;AACI;AACJ;AACA","sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\r\nimport Expenses from \"./Expenses\";\r\n\r\nfunction getPoints(purchaseAmount) {\r\n\r\nlet rewardPoints1 = 0\r\nlet NewPurchaseAmount = 0;\r\n\r\n          if(purchaseAmount === 100) {\r\n            (rewardPoints1 = 53);\r\n          }\r\n          else if(purchaseAmount >= 100) {\r\n            (newpurchaseAmount = purchaseAmount - 100);\r\n            (rewardPoints1 = (newpurchaseAmount * 2) + 50);\r\n          } else if (purchaseAmount >= 51 && purchaseAmount <= 100) {\r\n              (newPurchaseAmount = purchaseAmount - 50);\r\n              (rewardPoints1 = newPurchaseAmount);\r\n          } else if (purchaseAmount <= 50) {\r\n              (RewardPoints = 0)\r\n          }\r\n          return rewardPoints1\r\n\r\n};\r\n\r\nexport default RewardPoints;\r\n\r\n\r\n// ****************************************************************************************************************************************\r\n\r\n//T Do's\r\n//configure function so better suited for React, I have it coded in vanilla JS\r\n// Add in the the handling of decimals so as to only use whole numbers when calculating the RewardPoints\r\n    //some sort of Math.trunc() situation??\r\n//Take amount from mockData as prop to run through the RewardPoints function\r\n//Push this data into where it wants to display this on the app (Expenses.js I think?)\r\n"]},"metadata":{},"sourceType":"module"}